# ============================================================================
# TEST DEPENDENCIES - Monitor Miner v4.0
# ============================================================================
# Script para testar todas as depend√™ncias da arquitetura v4.0
# ============================================================================

print("[TEST] üîç Testando depend√™ncias da arquitetura v4.0...")

# Teste 1: Imports b√°sicos do MicroPython
print("\n[TEST] 1. Imports b√°sicos...")
try:
    import json
    print("‚úÖ json")
except ImportError as e:
    print(f"‚ùå json: {e}")

try:
    import time
    print("‚úÖ time")
except ImportError as e:
    print(f"‚ùå time: {e}")

try:
    import gc
    print("‚úÖ gc")
except ImportError as e:
    print(f"‚ùå gc: {e}")

try:
    import socket
    print("‚úÖ socket")
except ImportError as e:
    print(f"‚ùå socket: {e}")

try:
    from machine import WDT
    print("‚úÖ machine.WDT")
except ImportError as e:
    print(f"‚ùå machine.WDT: {e}")

# Teste 2: Core modules
print("\n[TEST] 2. Core modules...")
try:
    from core.response import json_response
    print("‚úÖ core.response")
except ImportError as e:
    print(f"‚ùå core.response: {e}")

try:
    from core.router import Router
    print("‚úÖ core.router")
except ImportError as e:
    print(f"‚ùå core.router: {e}")

try:
    from core.http_server import HTTPServer
    print("‚úÖ core.http_server")
except ImportError as e:
    print(f"‚ùå core.http_server: {e}")

# Teste 3: Services
print("\n[TEST] 3. Services...")
try:
    from services.system_monitor import system_monitor
    print("‚úÖ services.system_monitor")
except ImportError as e:
    print(f"‚ùå services.system_monitor: {e}")

try:
    from services.data_store import data_store
    print("‚úÖ services.data_store")
except ImportError as e:
    print(f"‚ùå services.data_store: {e}")

# Teste 4: Controllers
print("\n[TEST] 4. Controllers...")
try:
    from controllers.dashboard_controller import dashboard_controller
    print("‚úÖ controllers.dashboard_controller")
except ImportError as e:
    print(f"‚ùå controllers.dashboard_controller: {e}")

try:
    from controllers.config_controller import config_controller
    print("‚úÖ controllers.config_controller")
except ImportError as e:
    print(f"‚ùå controllers.config_controller: {e}")

# Teste 5: Main app
print("\n[TEST] 5. Main app...")
try:
    from main import MonitorMinerApp
    print("‚úÖ main.MonitorMinerApp")
except ImportError as e:
    print(f"‚ùå main.MonitorMinerApp: {e}")

print("\n[TEST] ‚úÖ Teste de depend√™ncias conclu√≠do!")
